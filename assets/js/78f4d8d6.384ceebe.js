"use strict";(self.webpackChunkprog_2_web=self.webpackChunkprog_2_web||[]).push([[1952],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>g});var n=t(67294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var c=n.createContext({}),l=function(e){var a=n.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},p=function(e){var a=l(e.components);return n.createElement(c.Provider,{value:a},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,s=e.mdxType,r=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(t),d=s,g=u["".concat(c,".").concat(d)]||u[d]||m[d]||r;return t?n.createElement(g,i(i({ref:a},p),{},{components:t})):n.createElement(g,i({ref:a},p))}));function g(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var r=t.length,i=new Array(r);i[0]=d;var o={};for(var c in a)hasOwnProperty.call(a,c)&&(o[c]=a[c]);o.originalType=e,o[u]="string"==typeof e?e:s,i[1]=o;for(var l=2;l<r;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},46899:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var n=t(87462),s=(t(67294),t(3905));const r={title:"Apuntes - Namespaces",sidebar_label:"Namespaces",slug:"/clases/estaticos/apuntes/namespaces",hide_table_of_contents:!1,hide_title:!0,author:"Mauricio Cerizza",authorURL:"https://github.com/mauricioCerizza"},i=void 0,o={unversionedId:"clases/estaticos/Apuntes/namespaces",id:"clases/estaticos/Apuntes/namespaces",title:"Apuntes - Namespaces",description:"Namespaces",source:"@site/docs/clases/02-estaticos/Apuntes/02-namespaces.md",sourceDirName:"clases/02-estaticos/Apuntes",slug:"/clases/estaticos/apuntes/namespaces",permalink:"/docs/clases/estaticos/apuntes/namespaces",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/clases/02-estaticos/Apuntes/02-namespaces.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Apuntes - Namespaces",sidebar_label:"Namespaces",slug:"/clases/estaticos/apuntes/namespaces",hide_table_of_contents:!1,hide_title:!0,author:"Mauricio Cerizza",authorURL:"https://github.com/mauricioCerizza"},sidebar:"Clases",previous:{title:"Clases est\xe1ticas",permalink:"/docs/clases/estaticos/apuntes/clases-estaticas"},next:{title:"Cuestionario",permalink:"/docs/clases/estaticos/apuntes/cuestionario"}},c={},l=[{value:"Namespaces",id:"namespaces",level:2},{value:"Directiva using",id:"directiva-using",level:3},{value:"Directiva alias",id:"directiva-alias",level:3}],p={toc:l},u="wrapper";function m(e){let{components:a,...t}=e;return(0,s.kt)(u,(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"namespaces"},"Namespaces"),(0,s.kt)("p",null,"Los ",(0,s.kt)("strong",{parentName:"p"},"espacios de nombres (",(0,s.kt)("em",{parentName:"strong"},"namespaces"),")")," son una agrupaci\xf3n l\xf3gica de clases y otros elementos del c\xf3digo fuente. As\xed como clasificamos nuestros archivos dentro de distintos directos del sistema operativo, podemos organizar el c\xf3digo fuente de C# y sus componentes en distintos espacios de nombres. "),(0,s.kt)("p",null,"Todo lo que declaremos deber\xe1 estar contenido dentro de un espacio de nombres."),(0,s.kt)("p",null,"Su funci\xf3n principal es la organizaci\xf3n del c\xf3digo, permitiendo la reducci\xf3n de conflictos por nombres duplicados y la posibilidad de trabajar en un mismo programa con componentes de distinta procedencia. "),(0,s.kt)("p",null,"Analicemos el siguiente c\xf3digo:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'System.Console.WriteLine("\xa1Hola mundo!");\n')),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"System")," es un ",(0,s.kt)("strong",{parentName:"li"},"namespace")," que forma parte de la ",(0,s.kt)("em",{parentName:"li"},"Base Class Library"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"Console")," es una ",(0,s.kt)("strong",{parentName:"li"},"clase")," dentro del namespace ",(0,s.kt)("inlineCode",{parentName:"li"},"System"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"WriteLine")," es un ",(0,s.kt)("strong",{parentName:"li"},"m\xe9todo ",(0,s.kt)("em",{parentName:"strong"},"est\xe1tico"))," de la clase ",(0,s.kt)("inlineCode",{parentName:"li"},"Console"),".")),(0,s.kt)("p",null,"Si bien al crear un nuevo proyecto en Visual Studio vemos que por defecto se genera un archivo con un namespace que lleva el mismo nombre que el proyecto, esto no necesariamente tiene que ser as\xed. Los identificadores de espacios de nombres pueden ser distintos al nombre del proyecto del que forman parte. Tambi\xe9n puede haber m\xe1s de un namespace por proyecto. "),(0,s.kt)("h3",{id:"directiva-using"},"Directiva using"),(0,s.kt)("p",null,"La ",(0,s.kt)("strong",{parentName:"p"},"directiva using")," permite la especificaci\xf3n de una llamada a un m\xe9todo sin el uso obligatorio de un nombre completamente cualificado (nombre completo incluyendo el espacio de nombres)."),(0,s.kt)("p",null,"Sin directiva ",(0,s.kt)("inlineCode",{parentName:"p"},"using"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"public class Program\n{\n    public static void Main()\n    {\n        // Sin la directiva 'using' tengo que anteponer el espacio de nombres al identificador de la clase. \n        System.Console.WriteLine(\"\xa1Hola mundo!\");\n    }\n}\n")),(0,s.kt)("p",null,"Con directiva ",(0,s.kt)("inlineCode",{parentName:"p"},"using"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'using System; //Directiva USING\n\npublic class Program\n{\n    public static void Main()\n    {\n        Console.WriteLine("\xa1Hola mundo!");\n    }\n}\n')),(0,s.kt)("h3",{id:"directiva-alias"},"Directiva alias"),(0,s.kt)("p",null,"La ",(0,s.kt)("strong",{parentName:"p"},"directiva alias")," permite utilizar un nombre distinto para un espacio de nombres. Se suele utilizar para abreviar nombres largos."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},'using SC = System.Console; //Directiva ALIAS\n\npublic class Program\n{\n    public static void Main()\n    {\n        SC.WriteLine("\xa1Hola mundo!");\n    }\n}\n')))}m.isMDXComponent=!0}}]);