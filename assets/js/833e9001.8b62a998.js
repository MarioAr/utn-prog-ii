"use strict";(self.webpackChunkprog_2_web=self.webpackChunkprog_2_web||[]).push([[9184],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>f});var t=n(7294);function i(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){i(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,t,i=function(e,r){if(null==e)return{};var n,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(i[n]=e[n]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=t.createContext({}),s=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):c(c({},r),e)),n},u=function(e){var r=s(e.components);return t.createElement(l.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=s(n),m=i,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return n?t.createElement(f,c(c({ref:r},u),{},{components:n})):t.createElement(f,c({ref:r},u))}));function f(e,r){var n=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=n.length,c=new Array(a);c[0]=m;var o={};for(var l in r)hasOwnProperty.call(r,l)&&(o[l]=r[l]);o.originalType=e,o[p]="string"==typeof e?e:i,c[1]=o;for(var s=2;s<a;s++)c[s]=n[s];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6293:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var t=n(7462),i=(n(7294),n(3905));const a={title:"\xcdndice - Programaci\xf3n multi-hilo y concurrencia.",sidebar_label:"\xcdndice",sidebar_position:0,slug:"/concurrencia",hide_table_of_contents:!0,hide_title:!1},c=void 0,o={unversionedId:"clases/concurrencia/indice",id:"clases/concurrencia/indice",title:"\xcdndice - Programaci\xf3n multi-hilo y concurrencia.",description:"Resumen",source:"@site/docs/clases/19-concurrencia/indice.md",sourceDirName:"clases/19-concurrencia",slug:"/concurrencia",permalink:"/utn-prog-ii/docs/concurrencia",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/clases/19-concurrencia/indice.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"\xcdndice - Programaci\xf3n multi-hilo y concurrencia.",sidebar_label:"\xcdndice",sidebar_position:0,slug:"/concurrencia",hide_table_of_contents:!0,hide_title:!1}},l={},s=[{value:"Resumen",id:"resumen",level:2},{value:"Apuntes",id:"apuntes",level:2},{value:"Ejercicios",id:"ejercicios",level:2},{value:"Consolidaci\xf3n",id:"consolidaci\xf3n",level:4},{value:"Bibliograf\xeda",id:"bibliograf\xeda",level:2}],u={toc:s},p="wrapper";function d(e){let{components:r,...n}=e;return(0,i.kt)(p,(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"resumen"},"Resumen"),(0,i.kt)("p",null,"En esta secci\xf3n introduciremos algunas formas de trabajar en C# con procesos que se ejecutan en simult\xe1neo. Introduciremos los conceptos de concurrencia, hilos, programaci\xf3n paralela, entre otros."),(0,i.kt)("h2",{id:"apuntes"},"Apuntes"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/utn-prog-ii/docs/clases/concurrencia/apuntes/concurrencia"},"Concurrencia")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/utn-prog-ii/docs/clases/concurrencia/apuntes/multihilo"},"Programaci\xf3n multi-hilo")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/utn-prog-ii/docs/concurrencia/cuestionario"},"Cuestionario")),(0,i.kt)("h2",{id:"ejercicios"},"Ejercicios"),(0,i.kt)("h4",{id:"consolidaci\xf3n"},"Consolidaci\xf3n"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/utn-prog-ii/docs/clases/concurrencia/Ejercicios/C01-reloj"},"C01 - El relojero")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/utn-prog-ii/docs/clases/concurrencia/Ejercicios/C02-simulador-clientes"},"C02 - Simulador de atenci\xf3n a clientes")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/utn-prog-ii/docs/clases/concurrencia/Ejercicios/C03-simulador-centralita"},"C03 - Simulador de llamadas")),(0,i.kt)("h2",{id:"bibliograf\xeda"},"Bibliograf\xeda"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Cleary, S. (2019). ",(0,i.kt)("em",{parentName:"li"},"Concurrency in C# Cookbook")," (2nd ed.). Estados Unidos: O'Reilly Media."),(0,i.kt)("li",{parentName:"ul"},"Price, M. J. (2020). Improving Performance and Scalability Using Multitasking. En (5th ed.) ",(0,i.kt)("em",{parentName:"li"},"C#9 and .NET 5 - Modern Cross-Platform Development.")," (pp. 667-705). Reino Unido: Packt Publishing."),(0,i.kt)("li",{parentName:"ul"})))}d.isMDXComponent=!0}}]);