"use strict";(self.webpackChunkprog_2_web=self.webpackChunkprog_2_web||[]).push([[3668],{3905:(e,a,o)=>{o.d(a,{Zo:()=>u,kt:()=>g});var n=o(7294);function t(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function r(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?r(Object(o),!0).forEach((function(a){t(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function s(e,a){if(null==e)return{};var o,n,t=function(e,a){if(null==e)return{};var o,n,t={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],a.indexOf(o)>=0||(t[o]=e[o]);return t}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var l=n.createContext({}),c=function(e){var a=n.useContext(l),o=a;return e&&(o="function"==typeof e?e(a):i(i({},a),e)),o},u=function(e){var a=c(e.components);return n.createElement(l.Provider,{value:a},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var o=e.components,t=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(o),m=t,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||r;return o?n.createElement(g,i(i({ref:a},u),{},{components:o})):n.createElement(g,i({ref:a},u))}));function g(e,a){var o=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var r=o.length,i=new Array(r);i[0]=m;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s[p]="string"==typeof e?e:t,i[1]=s;for(var c=2;c<r;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},1339:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=o(7462),t=(o(7294),o(3905));const r={sidebar_label:"Crear un proyecto de consola",slug:"/clases/introduccion/apuntes/proyecto-consola",hide_table_of_contents:!1,hide_title:!0,author:"Mauricio Cerizza",authorURL:"https://github.com/mauricioCerizza"},i=void 0,s={unversionedId:"clases/introduccion/Apuntes/proyecto-consola",id:"clases/introduccion/Apuntes/proyecto-consola",title:"proyecto-consola",description:"Crear un proyecto de consola",source:"@site/docs/clases/01-introduccion/Apuntes/02-proyecto-consola.md",sourceDirName:"clases/01-introduccion/Apuntes",slug:"/clases/introduccion/apuntes/proyecto-consola",permalink:"/utn-prog-ii/docs/clases/introduccion/apuntes/proyecto-consola",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/clases/01-introduccion/Apuntes/02-proyecto-consola.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Crear un proyecto de consola",slug:"/clases/introduccion/apuntes/proyecto-consola",hide_table_of_contents:!1,hide_title:!0,author:"Mauricio Cerizza",authorURL:"https://github.com/mauricioCerizza"},sidebar:"Clases",previous:{title:"Introducci\xf3n a .NET",permalink:"/utn-prog-ii/docs/clases/introduccion/apuntes/introduccion-net"},next:{title:"Introducci\xf3n a C#",permalink:"/utn-prog-ii/docs/clases/introduccion/apuntes/introduccion-c-sharp"}},l={},c=[{value:"Crear un proyecto de consola",id:"crear-un-proyecto-de-consola",level:2},{value:"Entendiendo Visual Studio",id:"entendiendo-visual-studio",level:2},{value:"Barra lateral derecha",id:"barra-lateral-derecha",level:3},{value:"IntelliSense",id:"intellisense",level:3},{value:"Esquema de colores (Themes)",id:"esquema-de-colores-themes",level:3}],u={toc:c},p="wrapper";function d(e){let{components:a,...r}=e;return(0,t.kt)(p,(0,n.Z)({},u,r,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h2",{id:"crear-un-proyecto-de-consola"},"Crear un proyecto de consola"),(0,t.kt)("p",null,"Exploremos el entorno de trabajo y pongamos en ejecuci\xf3n nuestra primera aplicaci\xf3n de consola."),(0,t.kt)("p",null,"Lo primero que tendremos que hacer es abrir ",(0,t.kt)("inlineCode",{parentName:"p"},"Visual Studio"),", nos mostrar\xe1 la siguiente pantalla con acciones r\xe1pidas para arrancar:"),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"Inicio Visual Studio",src:o(1602).Z,width:"385",height:"488"})),(0,t.kt)("p",null,"Presionaremos en ",(0,t.kt)("inlineCode",{parentName:"p"},"Crear un proyecto"),". Lo siguiente que encontraremos es una serie de plantillas o templates de los distintos tipos de proyectos que podemos encarar con la plataforma. Arriba tendremos una barra de b\xfasqueda y filtros por lenguaje, plataforma y tipo de aplicaci\xf3n. "),(0,t.kt)("p",null,"Elegiremos ",(0,t.kt)("inlineCode",{parentName:"p"},"Aplicaci\xf3n de consola"),"."),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"Template Consola Visual Studio",src:o(3594).Z,width:"982",height:"307"})),(0,t.kt)("p",null,'Lo siguiente ser\xe1 elegir un nombre para el proyecto y otro para la soluci\xf3n (o el mismo) y presionar el bot\xf3n "Crear". '),(0,t.kt)("p",null,"Un ",(0,t.kt)("strong",{parentName:"p"},"proyecto")," es una estructura que nos permitir\xe1 construir nuestros programas con .NET y compilarlos como una unidad independiente, mientras que a una ",(0,t.kt)("strong",{parentName:"p"},"soluci\xf3n")," la podemos ver como una agrupadora de proyectos. Normalmente un programa de .NET est\xe1 compuesto por varios proyectos inter-relacionados dentro de una soluci\xf3n. "),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"Template Consola Visual Studio",src:o(5015).Z,width:"634",height:"373"})),(0,t.kt)("p",null,"Una vez creado nos aparecer\xe1 el siguiente c\xf3digo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-csharp"},'using System;\n\nnamespace Hola_Mundo\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine("Hello World!");\n        }\n    }\n}\n')),(0,t.kt)("p",null,"Este es el c\xf3digo m\xednimo sobre el cual arrancaremos todas nuestras aplicaciones de consola. Nos adentraremos en los detalles m\xe1s adelante."),(0,t.kt)("p",null,"Para ejecutar este programa tenemos 2 opciones, o presionar la tecla ",(0,t.kt)("inlineCode",{parentName:"p"},"F5"),' o el bot\xf3n de "play" en la barra de acciones de arriba. '),(0,t.kt)("p",null,"Seguido veremos la consola con la salida en texto ",(0,t.kt)("em",{parentName:"p"},'"Hello World!"'),"."),(0,t.kt)("p",null,"\xa1Felicitaciones, acab\xe1s de crear tu primer programa con C#!"),(0,t.kt)("admonition",{type:"tip"},(0,t.kt)("p",{parentName:"admonition"},"Te recomendamos crear una nueva soluci\xf3n por cada ejercicio que vayas a realizar. Tambi\xe9n mantener todas las soluciones en una \xfanica carpeta que est\xe9 versionada con Git y enlazada a tu repositorio en GitHub.  ")),(0,t.kt)("h2",{id:"entendiendo-visual-studio"},"Entendiendo Visual Studio"),(0,t.kt)("p",null,"Como podemos observar r\xe1pidamente, Visual Studio se presenta como una interfaz de \xfanica p\xe1gina (SPI) compuesta por m\xfaltiples ventanas anidadas. Est\xe1 de m\xe1s decir que podremos administrar estas ventanas a gusto, todas soportan funcionalidades b\xe1sicas como mover, cambiar el tama\xf1o, ocultar y fijar. "),(0,t.kt)("p",null,"Hagamos un repaso r\xe1pido de las secciones m\xe1s importantes."),(0,t.kt)("h3",{id:"barra-lateral-derecha"},"Barra lateral derecha"),(0,t.kt)("admonition",{title:"Informaci\xf3n",type:"note"},(0,t.kt)("p",{parentName:"admonition"},"Si por defecto no ves alguna secci\xf3n, pod\xe9s abrirlas desde el men\xfa ",(0,t.kt)("inlineCode",{parentName:"p"},"View/Ver")," o utilizando los atajos de teclado. ")),(0,t.kt)("h3",{id:"intellisense"},"IntelliSense"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"IntelliSense")," es la tecnolog\xeda de autocompletado de c\xf3digo y de detecci\xf3n de errores de Visual Studio y Visual Studio Code. "),(0,t.kt)("h3",{id:"esquema-de-colores-themes"},"Esquema de colores (Themes)"),(0,t.kt)("p",null,"Para cambiar el esquema de colores de Visual Studio..."))}d.isMDXComponent=!0},1602:(e,a,o)=>{o.d(a,{Z:()=>n});const n=o.p+"assets/images/inicio-visual-studio-9a3aa2cc9855fd6bb022a3eef729955d.png"},5015:(e,a,o)=>{o.d(a,{Z:()=>n});const n=o.p+"assets/images/nombre_proyecto_vs-78e7abdd752a0c4e528f262479c3fa0c.png"},3594:(e,a,o)=>{o.d(a,{Z:()=>n});const n=o.p+"assets/images/template-consola-vs-9647594b34b6e69ba39ca42664f4be1a.png"}}]);