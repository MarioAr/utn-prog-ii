"use strict";(self.webpackChunkprog_2_web=self.webpackChunkprog_2_web||[]).push([[9209],{3905:(e,a,t)=>{t.d(a,{Zo:()=>u,kt:()=>m});var r=t(7294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,r,s=function(e,a){if(null==e)return{};var t,r,s={},n=Object.keys(e);for(r=0;r<n.length;r++)t=n[r],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)t=n[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=r.createContext({}),i=function(e){var a=r.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):c(c({},a),e)),t},u=function(e){var a=i(e.components);return r.createElement(l.Provider,{value:a},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},b=r.forwardRef((function(e,a){var t=e.components,s=e.mdxType,n=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=i(t),b=s,m=p["".concat(l,".").concat(b)]||p[b]||d[b]||n;return t?r.createElement(m,c(c({ref:a},u),{},{components:t})):r.createElement(m,c({ref:a},u))}));function m(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var n=t.length,c=new Array(n);c[0]=b;var o={};for(var l in a)hasOwnProperty.call(a,l)&&(o[l]=a[l]);o.originalType=e,o[p]="string"==typeof e?e:s,c[1]=o;for(var i=2;i<n;i++)c[i]=t[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},8123:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>n,metadata:()=>o,toc:()=>i});var r=t(7462),s=(t(7294),t(3905));const n={title:"Apuntes - Clases y m\xe9todos abstractos",sidebar_label:"Clases abstractas",slug:"/clases/abstract/apuntes/abstract",hide_table_of_contents:!1,hide_title:!1,author:null,authorURL:null},c=void 0,o={unversionedId:"clases/abstract/Apuntes/clases-abstractas",id:"clases/abstract/Apuntes/clases-abstractas",title:"Apuntes - Clases y m\xe9todos abstractos",description:"Clases Abstractas",source:"@site/docs/clases/10-abstract/Apuntes/00-clases-abstractas.md",sourceDirName:"clases/10-abstract/Apuntes",slug:"/clases/abstract/apuntes/abstract",permalink:"/utn-prog-ii/docs/clases/abstract/apuntes/abstract",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/clases/10-abstract/Apuntes/00-clases-abstractas.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Apuntes - Clases y m\xe9todos abstractos",sidebar_label:"Clases abstractas",slug:"/clases/abstract/apuntes/abstract",hide_table_of_contents:!1,hide_title:!1,author:null,authorURL:null}},l={},i=[{value:"Clases Abstractas",id:"clases-abstractas",level:2}],u={toc:i},p="wrapper";function d(e){let{components:a,...t}=e;return(0,s.kt)(p,(0,r.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"clases-abstractas"},"Clases Abstractas"),(0,s.kt)("p",null,"Las clases se pueden declarar como abstractas poniendo la palabra clave abstract antes de la definici\xf3n de la clase."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract class Figura{\n    //...\n} \n")),(0,s.kt)("p",null,"No se puede crear una instancia de una clase abstracta. El prop\xf3sito de una clase abstracta es proporcionar una definici\xf3n com\xfan de una clase base que pueden compartir m\xfaltiples clases derivadas. Por ejemplo, se puede definir una clase abstracta que se usa como par\xe1metro para muchas de sus funciones y requerir que los programadores que usan esa clase proporcionen su propia implementaci\xf3n de la clase creando una clase derivada."),(0,s.kt)("p",null,"Las clases abstractas pueden contener m\xe9todos, propiedades, indexadores y eventos abstractos."),(0,s.kt)("p",null,"No es posible marcar una clase abstracta con el modificador ",(0,s.kt)("em",{parentName:"p"},"sealed")," porque ambos modificadores tienen significados opuestos. El modificador ",(0,s.kt)("em",{parentName:"p"},"sealed")," evita que una clase se pueda heredar y el modificador ",(0,s.kt)("em",{parentName:"p"},"abstract")," requiere que se herede una clase."),(0,s.kt)("p",null,"Es posible tener variables con tipos que en tiempo de compilaci\xf3n sean abstractos. Estas variables ser\xe1n ",(0,s.kt)("em",{parentName:"p"},"null")," o ocntendr\xe1n referencias a ",(0,s.kt)("em",{parentName:"p"},"instancias de una clase derivada no-abstracta")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"public abstract class Figura{\n    //...\n} \npublic abstract class Cuadrado : Figura{\n    //...\n} \n\nFigura figura = new Cuadrado();\n\n")),(0,s.kt)("p",null,"Una clase abstracta que implementa una interfaz debe proporcionar implementaci\xf3n para todos los miembros de la interfaz. Tambi\xe9n puede marcar los m\xe9todos de la interfaz como m\xe9todos abstractos. Por ejemplo:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp"},"interface  IFigura{\n    float CalcularArea();\n} \npublic abstract class Figura2D : IFigura{\n    public abstract float CalcularArea();\n} \npublic class Cuadrado : Figura2D{\n    int lado;\n    public override float CalcularArea(){\n        return lado * lado;\n    }\n}\n")))}d.isMDXComponent=!0}}]);