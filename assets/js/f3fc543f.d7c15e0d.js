"use strict";(self.webpackChunkprog_2_web=self.webpackChunkprog_2_web||[]).push([[6158],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(t),d=a,f=p["".concat(i,".").concat(d)]||p[d]||m[d]||o;return t?r.createElement(f,l(l({ref:n},c),{},{components:t})):r.createElement(f,l({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[p]="string"==typeof e?e:a,l[1]=s;for(var u=2;u<o;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},37033:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=t(87462),a=(t(67294),t(3905));const o={sidebar_label:"Enumerados",slug:"/clases/encapsulamiento/apuntes/enumerados",hide_table_of_contents:!1,hide_title:!0,author:null,authorURL:null},l=void 0,s={unversionedId:"clases/encapsulamiento/Apuntes/enumerados",id:"clases/encapsulamiento/Apuntes/enumerados",title:"enumerados",description:"Enumerados",source:"@site/docs/clases/07-encapsulamiento/Apuntes/03-enumerados.md",sourceDirName:"clases/07-encapsulamiento/Apuntes",slug:"/clases/encapsulamiento/apuntes/enumerados",permalink:"/docs/clases/encapsulamiento/apuntes/enumerados",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/clases/07-encapsulamiento/Apuntes/03-enumerados.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Enumerados",slug:"/clases/encapsulamiento/apuntes/enumerados",hide_table_of_contents:!1,hide_title:!0,author:null,authorURL:null},sidebar:"Clases",previous:{title:"Indexadores",permalink:"/docs/clases/encapsulamiento/apuntes/indexadores"},next:{title:"Cuestionario",permalink:"/docs/clases/encapsulamiento/apuntes/cuestionario"}},i={},u=[{value:"Enumerados",id:"enumerados",level:2}],c={toc:u},p="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"enumerados"},"Enumerados"),(0,a.kt)("p",null,"Un ",(0,a.kt)("strong",{parentName:"p"},"enumerado")," es un ",(0,a.kt)("strong",{parentName:"p"},"tipo de valor")," que define un conjunto de constantes con nombre."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public enum Color\n{\n    Rojo,\n    Verde,\n    Azul\n}\n")),(0,a.kt)("p",null,"De forma predeterminada, los valores miembros del enumerado estan asociados con un numero del tipo ",(0,a.kt)("inlineCode",{parentName:"p"},"int"),". Comienzan con cero y aumentan en uno en el orden que fueron definidos.  Es posible especificar expl\xedcitamente los valores de asociados, como se muestra en el ejemplo siguiente:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public enum Color\n{\n    Rojo,\n    Verde = 100,\n    Azul \n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Al miembro del enumerado ",(0,a.kt)("inlineCode",{parentName:"li"},"Rojo")," se le asigna autom\xe1ticamente el valor cero (ya que no tiene inicializador y es el primer miembro de la enumeraci\xf3n)"),(0,a.kt)("li",{parentName:"ul"},"El miembro del enumerado ",(0,a.kt)("inlineCode",{parentName:"li"},"Verde")," recibe expl\xedcitamente el valor 100."),(0,a.kt)("li",{parentName:"ul"},"Al miembro del enumerado ",(0,a.kt)("inlineCode",{parentName:"li"},"Blue")," se le asigna autom\xe1ticamente el valor m\xe1s uno del miembro que lo precede textualmente.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"class Program\n{\n   static void Main()\n   {\n        Console.WriteLine(Color.Rojo);\n        Console.WriteLine((Color)100);\n        Console.WriteLine((int)Color.Azul);\n   }\n}\n\n// El ejemplo muestra la siguiente salida:\n//    Rojo\n//    Verde\n//    101\n")))}m.isMDXComponent=!0}}]);